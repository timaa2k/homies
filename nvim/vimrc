" ============================================================================ "
" ===                           GENERAL SETTINGS                           === "
" ============================================================================ "

set mouse=a
set wrapscan
set smartcase

set splitbelow
set splitright

set termguicolors

filetype plugin indent on
set autoindent
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set smarttab

set incsearch smartcase hlsearch
set nolist
set wrap breakindent
set encoding=utf-8

set title
set number
":set number relativenumber
":augroup numbertoggle
":  autocmd!
":  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
":  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
":augroup END
set cursorline
set ruler showcmd showmode


" Disable .swp already exists warning
set shortmess+=A

syntax on

" Required by Coc-nvim

" TextEdit might fail if hidden is not set.
" Downsides removed by Wintabs
set hidden

" Some servers have issues with backup files, see #649.
set nobackup
set nowritebackup

" Give normal space for displaying messages.
set cmdheight=1

" Empty echo area after entered command.
autocmd CmdlineLeave * echo ''

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
set signcolumn=yes


" ============================================================================ "
" ===                           AIRLINE SETTINGS                           === "
" ============================================================================ "

set showtabline=2
set laststatus=2
set noshowmode

" Lower waiting time when quitting INSERT mode.
set ttimeout
set ttimeoutlen=100
set timeoutlen=3000

let g:airline_detect_modified=1
let g:airline_detect_paste=1
let g:airline_theme='dark'
let g:airline_exclude_preview = 1
let g:airline#parts#ffenc#skip_expected_string='utf-8[unix]'
let g:airline_statusline_ontop = 1
let g:airline_highlighting_cache = 1

let g:airline_section_y = '%2p%%'
let g:airline_section_z = '%l : %c'

let g:airline_symbols = {
  \ 'branch': '',
\ }

let g:airline#extensions#disable_rtp_load = v:true
let g:airline_extensions = [
  \ 'branch',
  \ 'coc',
  \ 'tmuxline',
\ ]

let g:airline#extensions#hunks#enabled = 0
let g:airline#extensions#branch#empty_message = ''
" to only show the tail, e.g. a branch 'feature/foo' becomes 'foo', use
let g:airline#extensions#branch#format = 1

let g:airline#extensions#coc#enabled = 1
let g:airline#extensions#tmuxline#enabled = 1
let g:airline#extensions#tmuxline#snapshot_file = "~/.tmux-colors"

let g:tmuxline_powerline_separators = 0

let g:airline#extensions#default#section_truncate_width = {
  \ 'b': 79,
  \ 'x': 60,
  \ 'y': 88,
  \ 'z': 45,
  \ 'warning': 80,
  \ 'error': 80,
  \ }

let g:airline#extensions#default#layout = [
  \ [ 'a', 'b', 'error', 'warning', 'c' ],
  \ [ 'x', 'y', 'z',]
  \ ]


" ============================================================================ "
" ===                     FILETYPE SPECIFIC SETTINGS                       === "
" ============================================================================ "

" Hack to ensure vim-wintabs is loaded after the lightline-vim plugin.
autocmd VimEnter * packadd vim-wintabs

" Golang
autocmd Filetype go setlocal noexpandtab tabstop=4 shiftwidth=4 softtabstop=4
autocmd BufWritePre *.go :call CocAction('runCommand', 'editor.action.organizeImport')

" Markdown
au FileType markdown setlocal spell

" Python
autocmd Filetype python setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4


" ============================================================================ "
" ===                        Coc-nvim PLUGIN CONFIG                        === "
" ============================================================================ "
"
" Add `:Format` command to format current buffer.
command! -nargs=0 Format :call CocAction('format')

" Add `:Fold` command to fold current buffer.
command! -nargs=? Fold :call CocAction('fold', <f-args>)

" Add `:Imports` command for organize imports of the current buffer.
command! -nargs=0 Imports :call CocAction('runCommand', 'editor.action.organizeImport')

" Add (Neo)Vim's native statusline support.
" TODO(tim): Please see `:h coc-status` for integrations with external plugins that
" provide custom statusline: lightline.vim, vim-airline.
"set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}

" Use tab for trigger completion with characters ahead and navigate.
" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped.
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  else
    call CocAction('doHover')
  endif
endfunction

" Highlight the symbol and its references when holding the cursor.
autocmd CursorHold * silent call CocActionAsync('highlight')

augroup mygroup
  autocmd!
  " Setup formatexpr specified filetype(s).
  autocmd FileType typescript,json setl formatexpr=CocAction('formatSelected')
  " Update signature help on jump placeholder.
  autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp')
augroup end


" ============================================================================ "
" ===                         Echodoc PLUGIN CONFIG                        === "
" ============================================================================ "

" Display function signatures in echo area
let g:echodoc#enable_at_startup = 1
let g:echodoc#type = 'signature'


" ============================================================================ "
" ===                         NERDTree PLUGIN CONFIG                       === "
" ============================================================================ "

" Always show NERDTree to the left.
let g:NERDTreeWinPos = "left"

" Delete the buffer when deleting a file via NERDTree.
let NERDTreeAutoDeleteBuffer = 1

" Preffify NERDTree.
let NERDTreeMinimalUI = 1
"let NERDTreeDirArrows = 1

" Start NERDTree if vim is invoked without cmd line args.
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * if argc() == 0 && !exists(“s:std_in”) | NERDTree | endif
"
" Automatically close tab if the only remaining one is NERDTree.
"autocmd bufenter * if (winnr(“$”) == 1 && exists(“b:NERDTreeType”) && b:NERDTreeType == “primary”) | q | endif
"
" Automatically close NERDTree after opening a file.
let NERDTreeQuitOnOpen = 1


" ============================================================================ "
" ===                        WinTabs PLUGIN CONFIG                         === "
" ============================================================================ "

let g:wintabs_display = 'statusline'
let g:wintabs_autoclose = 1
let g:wintabs_autoclose_vim = 1
let g:wintabs_autoclose_vimtab = 1
let g:wintabs_switchbuf = ''
let g:wintabs_ui_modified = '+'
let g:wintabs_ui_readonly = '-'
let g:wintabs_ui_sep_leftmost = ''
let g:wintabs_ui_sep_inbetween = ''
let g:wintabs_ui_sep_rightmost = ''
let g:wintabs_ui_active_higroup = 'Search'


" ============================================================================ "
" ===                             KEY MAPPINGS                             === "
" ============================================================================ "

" === General Shorcuts === "

" Change leader key from "\" to ","
let mapleader=","

" Improved navigation
"nnoremap <silent> <C-h> :TmuxNavigateLeft<CR>
"nnoremap <silent> <C-j> :TmuxNavigateDown<CR>
"nnoremap <silent> <C-k> :TmuxNavigateUp<CR>
"nnoremap <silent> <C-l> :TmuxNavigateRight<CR>

"tnoremap <C-w>h <C-\><C-n><C-w>h
"tnoremap <C-w>j <C-\><C-n><C-w>j
"tnoremap <C-w>k <C-\><C-n><C-w>k
"tnoremap <C-w>l <C-\><C-n><C-w>l


" === Fzf Shortcuts === "

nnoremap <silent> <C-f> :Files<CR>
nnoremap <silent> <C-b> :Buffers<CR>
nnoremap <silent> <C-v> :Git<CR>

" === WinTab Shortcuts === "

nnoremap <silent> <S-Tab> :WintabsPrevious<CR>
nnoremap <silent> <Tab> :WintabsNext<CR>
nnoremap <silent> <C-x> :WintabsClose<CR>
nnoremap <silent> <C-z> :WintabsUndo<CR>
command! Tclose WintabsClose
command! Tnext WintabsNext
command! Tprev WintabsPrevious
command! Tmax WintabsMaximize
command! Tundo WintabsUndo

" === NERDTree Shortcuts === "

nnoremap <silent> <C-T> :NERDTreeToggle<CR>
nnoremap <silent> <C-t> :NERDTreeFind<CR>


" === Coc-nvim Shorcuts === "

" Use <cr> to confirm completion, `<C-g>u` means break undo chain at current
" position. Coc only does snippet and additional edit on confirm.
if has('patch8.1.1068')
  " Use `complete_info` if your (Neo)Vim version supports it.
  inoremap <expr> <cr> complete_info()["selected"] != "-1" ? "\<C-y>" : "\<C-g>u\<CR>"
else
  imap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
endif

" Use K to show documentation in preview window.
nnoremap <silent> K :call <SID>show_documentation()<CR>

inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

" Use <c-space> to trigger completion.
inoremap <silent><expr> <c-space> coc#refresh()

" Use `[g` and `]g` to navigate diagnostics
nmap <silent> [g <Plug>(coc-diagnostic-prev)
nmap <silent> ]g <Plug>(coc-diagnostic-next)

" GoTo code navigation.
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" Symbol renaming.
nmap <leader>rn <Plug>(coc-rename)

" Formatting selected code.
xmap <leader>f  <Plug>(coc-format-selected)
nmap <leader>f  <Plug>(coc-format-selected)

" Applying codeAction to the selected region.
" Example: `<leader>aap` for current paragraph
xmap <leader>a  <Plug>(coc-codeaction-selected)
nmap <leader>a  <Plug>(coc-codeaction-selected)

" Remap keys for applying codeAction to the current line.
nmap <leader>ac  <Plug>(coc-codeaction)
" Apply AutoFix to problem on the current line.
nmap <leader>qf  <Plug>(coc-fix-current)

" Introduce function text object
" NOTE: Requires 'textDocument.documentSymbol' support from the language server.
xmap if <Plug>(coc-funcobj-i)
xmap af <Plug>(coc-funcobj-a)
omap if <Plug>(coc-funcobj-i)
omap af <Plug>(coc-funcobj-a)

" Use <TAB> for selections ranges.
" NOTE: Requires 'textDocument/selectionRange' support from the language server.
" coc-tsserver, coc-python are the examples of servers that support it.
"nmap <silent> <TAB> <Plug>(coc-range-select)
"xmap <silent> <TAB> <Plug>(coc-range-select)


" Mappings using CoCList:
" Show all diagnostics.
nnoremap <silent> <space>a  :<C-u>CocList diagnostics<cr>
" Manage extensions.
nnoremap <silent> <space>e  :<C-u>CocList extensions<cr>
" Show commands.
nnoremap <silent> <space>c  :<C-u>CocList commands<cr>
" Find symbol of current document.
nnoremap <silent> <space>o  :<C-u>CocList outline<cr>
" Search workspace symbols.
nnoremap <silent> <space>s  :<C-u>CocList -I symbols<cr>
" Do default action for next item.
nnoremap <silent> <space>j  :<C-u>CocNext<CR>
" Do default action for previous item.
nnoremap <silent> <space>k  :<C-u>CocPrev<CR>
" Resume latest coc list.
nnoremap <silent> <space>p  :<C-u>CocListResume<CR>


" ============================================================================ "
" ===                              COLORSCHEME                             === "
" ============================================================================ "

set background=dark

hi Normal       cterm=none ctermbg=none ctermfg=15   gui=none guibg=#282828 guifg=#F7F7F7
hi LineNr       cterm=none ctermbg=none ctermfg=8    gui=none guibg=#282828 guifg=#8F8F8F
hi StatusLine   cterm=none ctermbg=8    ctermfg=15   gui=none guibg=#5D5D5D guifg=#FBFBFB
hi StatusLineNC cterm=none ctermbg=15   ctermfg=8    gui=none guibg=#5D5D5D guifg=#FBFBFB
hi Search       cterm=none ctermbg=6    ctermfg=15   gui=none guibg=#2EB5C1 guifg=#F7F7F7
hi IncSearch    cterm=none ctermbg=3    ctermfg=8    gui=none guibg=#F6DC69 guifg=#8F8F8F
hi ColumnMargin cterm=none ctermbg=0                 gui=none guibg=#000000
hi Error        cterm=none ctermbg=124  ctermfg=15   gui=none               guifg=#F7F7F7
hi ErrorMsg     cterm=none ctermbg=124  ctermfg=15   gui=none               guifg=#F7F7F7
hi Folded       cterm=none ctermbg=8    ctermfg=2    gui=none guibg=#3B3B3B guifg=#90AB41
hi FoldColumn   cterm=none ctermbg=8    ctermfg=2    gui=none guibg=#3B3B3B guifg=#90AB41
hi NonText      cterm=bold ctermbg=none ctermfg=8    gui=bold guibg=none    guifg=#8F8F8F
hi ModeMsg      cterm=bold ctermbg=none ctermfg=10   gui=none
hi Pmenu        cterm=none ctermbg=234  ctermfg=15   gui=none guibg=#404040 guifg=#F7F7F7
hi PmenuSel     cterm=none ctermbg=66   ctermfg=15   gui=bold guibg=#D0D0D0 guifg=#404040
hi PmenuSbar    cterm=none ctermbg=234  ctermfg=15   gui=bold guibg=#F7F7F7 guifg=#8F8F8F
hi SpellBad     cterm=none ctermbg=1    ctermfg=15   gui=none               guifg=#F7F7F7
hi SpellCap     cterm=none ctermbg=4    ctermfg=15   gui=none               guifg=#F7F7F7
hi SpellRare    cterm=none ctermbg=4    ctermfg=15   gui=none               guifg=#F7F7F7
hi SpellLocal   cterm=none ctermbg=4    ctermfg=15   gui=none               guifg=#F7F7F7
hi Visual       cterm=none ctermbg=15   ctermfg=8    gui=none guibg=#F7F7F7 guifg=#8F8F8F
hi Directory    cterm=none ctermbg=none ctermfg=4    gui=none guibg=#242424 guifg=#88CCE7
hi SpecialKey   cterm=none ctermbg=none ctermfg=8    gui=none               guifg=#8F8F8F
hi DiffAdd      cterm=bold ctermbg=2    ctermfg=15
hi DiffChange   cterm=bold ctermbg=4    ctermfg=15
hi DiffDelete   cterm=bold ctermbg=124  ctermfg=15
hi DiffText     cterm=bold ctermbg=3    ctermfg=8
hi MatchParen   cterm=none ctermbg=6    ctermfg=15   gui=none guibg=#2EB5C1 guifg=#F7F7F7
hi CursorLine   cterm=none ctermbg=234  ctermfg=none gui=none guibg=#333333
hi CursorColumn cterm=none ctermbg=234  ctermfg=none gui=none guibg=#424242
hi Title        cterm=none ctermbg=none ctermfg=4    gui=none               guifg=#88CCE7
hi VertSplit    cterm=bold ctermbg=238  ctermfg=8    gui=bold guibg=#282828 guifg=#8F8F8F
hi SignColumn   cterm=bold ctermbg=238  ctermfg=8    gui=bold guibg=#282828 guifg=#8F8F8F
hi EndOfBuffer                          ctermfg=none                        guifg=#282828


" ============================================================================ "
" ===                          SYNTAX HIGHLIGHTING                         === "
" ============================================================================ "
"
"" Adapted from colorscheme smyck
" https://github.com/hukl/Smyck-Color-Scheme/blob/master/smyck.vim
" color smyck

hi Keyword       cterm=none ctermbg=none ctermfg=10   gui=none      guifg=#D1FA71
hi Comment       cterm=none ctermbg=none ctermfg=8    gui=bold      guifg=#8F8F8F
hi Delimiter     cterm=none ctermbg=none ctermfg=15   gui=none      guifg=#F7F7F7
hi Identifier    cterm=none ctermbg=none ctermfg=12   gui=none      guifg=#96D9F1
hi Structure     cterm=none ctermbg=none ctermfg=12   gui=none      guifg=#9DEEF2
hi Ignore        cterm=none ctermbg=none ctermfg=8    gui=none      guifg=bg
hi Constant      cterm=none ctermbg=none ctermfg=12   gui=none      guifg=#96D9F1
hi PreProc       cterm=none ctermbg=none ctermfg=10   gui=none      guifg=#D1FA71
hi Type          cterm=none ctermbg=none ctermfg=12   gui=none      guifg=#96D9F1
hi Statement     cterm=none ctermbg=none ctermfg=10   gui=none      guifg=#D1FA71
hi Special       cterm=none ctermbg=none ctermfg=6    gui=none      guifg=#d7d7d7
hi String        cterm=none ctermbg=none ctermfg=3    gui=none      guifg=#F6DC69
hi Number        cterm=none ctermbg=none ctermfg=3    gui=none      guifg=#F6DC69
hi Underlined    cterm=none ctermbg=none ctermfg=6    gui=underline guibg=#272727
hi Symbol        cterm=none ctermbg=none ctermfg=9    gui=none      guifg=#FAB1AB
hi Method        cterm=none ctermbg=none ctermfg=15   gui=none      guifg=#F7F7F7
hi Interpolation cterm=none ctermbg=none ctermfg=6    gui=none      guifg=#2EB5C1
